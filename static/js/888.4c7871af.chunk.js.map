{"version":3,"file":"static/js/888.4c7871af.chunk.js","mappings":"wQAEaA,E,QAAWC,EAAAA,GAAF,2F,SCmCtB,MA9BA,WACE,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAyBJ,EAAAA,EAAAA,UAAS,MAAlC,eAAMK,EAAN,KAAaC,EAAb,KACQC,GAAQC,EAAAA,EAAAA,MAARD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMH,GAAN,8EAChBH,GAAW,GADK,mBAGKO,EAAAA,EAAAA,IAAQJ,GAHb,OAGRK,EAHQ,OAIZV,EAASU,EAAKC,MAJF,gDAMdP,EAAS,KAAMQ,SAND,yBAQdV,GAAW,GARG,4EAAH,sDAWbM,EAAUH,EACb,GAAC,CAACA,IAEH,IAAMQ,EAAWd,EAAMe,KAAI,gBAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,UAA/B,OAA4C,2BAAkB,gBAAKC,IAAG,6CAAwCH,GACzII,IAAI,aACJC,MAAO,OAAM,uBAAIJ,KAAS,uCAAeC,OAFuCH,EAArD,IAI3B,OAAQ,gCAAGd,IAAW,oDACtB,SAACL,EAAD,UAAYiB,IACXV,IAAS,uBAAIA,MACf,C,mMCjCKmB,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAAwBC,EAAxB,+BAA+B,EAA/B,SACkBP,EAASQ,IAAI,uBAAwB,CAAED,KAAAA,IADzD,uBACGnB,EADH,EACGA,KADH,kBAEEA,GAFF,mEAKA,SAAeqB,EAAtB,kC,aAAO,O,oBAAA,WAA2B1B,GAA3B,yFACkBiB,EAASQ,IAAT,iBAAuBzB,IADzC,uBACGK,EADH,EACGA,KADH,kBAEEA,GAFF,kEAUPa,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMS,EAAM,mCAGL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACWX,EAAAA,EAAAA,IAAA,gCAEaS,EAFb,kBAE0BE,EAF1B,gCAHL,IAORC,MAAK,SAAAC,GAAG,OAAIA,EAAI1B,IAAR,IALN,cACC2B,EADD,yBAMEA,EAAEC,SANJ,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BlC,GAA1B,yFACkBiB,EAASQ,IAAT,iBAAuBzB,EAAvB,aADlB,uBACGK,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAuBJ,GAAvB,yFACkBiB,EAASQ,IAAT,iBAAuBzB,EAAvB,aADlB,uBACGK,EADH,EACGA,KADH,kBAEEA,GAFF,kE","sources":["components/Modules/MovieDetails/Cast/cast.styled.js","components/Modules/MovieDetails/Cast/Cast.jsx","service/api/getFilms.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container =styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\ngap 20px;\n`;\n","\nimport { getCast } from 'service/api/getFilms';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {Container} from './cast.styled';\n\n\nfunction Cast() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const[error, setError] = useState(null);\n  const { id }  = useParams();\n\n  useEffect(() => {\n    const fetchCast = async id => {\n      setLoading(true);\n      try {\n        const data = await getCast(id);\n          setItems(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n      fetchCast(id);\n  },[id]);\n\n  const elements = items.map(({cast_id, profile_path, name, character})=><li key={cast_id}><img src={`https://image.tmdb.org/t/p/original${profile_path}`}\n  alt='Actor name'\n  width={100}/><p>{name}</p><p>Character: {character}</p></li>)\n\n  return (<>{loading && <p>please wait, loading...</p>}\n  <Container>{elements}</Container>\n  {error && <p>{error}</p>}</>);\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c23d7755b502540a74ef819e02a6a593',\n    language: 'en-US',\n  },\n});\n\nexport async function getFilms(page = 1) {\n  const { data } = await instance.get('/trending/movie/week', { page });\n  return data;\n}\n\nexport async function getFilmById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\n// export async function getFilmSearch(search) {\n//   const { data } = await instance.get(`/search/movie/?query=${search}`);\n//   return data;\n// }\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'c23d7755b502540a74ef819e02a6a593';\nconst page = 1;\n\nexport async function getFilmSearch(query) {\n  const r = await axios\n    .get(\n      `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=${page}`\n    )\n    .then(res => res.data);\n  return r.results;\n}\n\nexport async function getReviews(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n"],"names":["Container","styled","useState","items","setItems","loading","setLoading","error","setError","id","useParams","useEffect","fetchCast","getCast","data","cast","message","elements","map","cast_id","profile_path","name","character","src","alt","width","instance","axios","baseURL","params","api_key","language","getFilms","page","get","getFilmById","KEY","getFilmSearch","query","then","res","r","results","getReviews"],"sourceRoot":""}