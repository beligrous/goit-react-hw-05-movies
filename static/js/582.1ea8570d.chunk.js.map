{"version":3,"file":"static/js/582.1ea8570d.chunk.js","mappings":"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","sources":["components/Modules/MovieDetails/movie-details.styled.js","components/Modules/MovieDetails/MovieDetails.jsx","components/Pages/MoviesPage/MoviesPage.jsx","service/api/getFilms.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  display: flex;\n  gap: 50px;\n`;\n\nexport const Title = styled.p`\n  font-size: 40px;\n  font-weight: 600;\n`;\n\nexport const Wrap = styled.span`\n  font-size: large;\n  font-weight: 600;\n`;\n\nexport const Button = styled.button`\nposition: absolute;\n\n`;","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { getFilmById } from 'service/api/getFilms';\nimport { Card, Title, Wrap, Button } from './movie-details.styled';\n\nfunction MovieDetails() {\n  const [title, setTitle] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster_path, setPoster_path] = useState('');\n  const [overview, setOverview] = useState('');\n  const [popularity, setPopularity] = useState(0);\n  const [year, setYear] = useState('');\n\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchFilmById = async id => {\n      const {\n        title,\n        genres,\n        poster_path,\n        overview,\n        vote_average,\n        release_date,\n      } = await getFilmById(id);\n      setTitle(title);\n      setGenres(genres.map(item => item.name));\n      setPoster_path(poster_path);\n      setOverview(overview);\n      setPopularity(vote_average);\n      setYear(release_date.split('-'));\n    };\n    fetchFilmById(id);\n  }, [id]);\n\n  const handleBack = () => navigate(location.state.from);\n\n  return (\n    <>\n      <Button type=\"button\" onClick={handleBack}>\n        &#8678; Go back\n      </Button>\n      <Card>\n        <img\n          src={`https://image.tmdb.org/t/p/w400${poster_path}`}\n          alt={title}\n          width={300}\n        />\n        <div>\n          <Title>\n            {title}\n            {`(${year[0]})`}\n          </Title>\n          <p>\n            <Wrap>User Score:</Wrap> {popularity.toFixed(1)}\n          </p>\n          <p>\n            <Wrap>Genres:</Wrap> {genres.join(' ')}\n          </p>\n          <p>\n            <Wrap>Overview:</Wrap> {overview}\n          </p>\n        </div>\n      </Card>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import { Outlet } from 'react-router-dom';\nimport MovieDetails from 'components/Modules/MovieDetails/MovieDetails';\n\n\nfunction MoviePage() {\n\n  return (\n    <>\n      <MovieDetails />\n      <Outlet/>\n    </>\n  );\n}\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c23d7755b502540a74ef819e02a6a593',\n    language: 'en-US',\n  },\n});\n\nexport async function getFilms(page = 1) {\n  const { data } = await instance.get('/trending/movie/week', { page });\n  return data;\n}\n\nexport async function getFilmById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\n// export async function getFilmSearch(search) {\n//   const { data } = await instance.get(`/search/movie/?query=${search}`);\n//   return data;\n// }\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'c23d7755b502540a74ef819e02a6a593';\nconst page = 1;\n\nexport async function getFilmSearch(query) {\n  const r = await axios\n    .get(\n      `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=${page}`\n    )\n    .then(res => res.data);\n  return r.results;\n}\n\nexport async function getReviews(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n"],"names":["Card","styled","Title","Wrap","Button","useState","title","setTitle","genres","setGenres","poster_path","setPoster_path","overview","setOverview","popularity","setPopularity","year","setYear","id","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchFilmById","getFilmById","vote_average","release_date","map","item","name","split","type","onClick","state","from","src","alt","width","toFixed","join","instance","axios","baseURL","params","api_key","language","getFilms","page","get","data","KEY","getFilmSearch","query","then","res","r","results","getReviews","getCast"],"sourceRoot":""}