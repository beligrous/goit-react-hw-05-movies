{"version":3,"file":"static/js/581.2c40c03f.chunk.js","mappings":"gOAkCA,UA5BA,WACE,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAyBJ,EAAAA,EAAAA,UAAS,MAAlC,eAAMK,EAAN,KAAaC,EAAb,KACQC,GAAQC,EAAAA,EAAAA,MAARD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMH,GAAN,8EACnBH,GAAW,GADQ,mBAGEO,EAAAA,EAAAA,IAAWJ,GAHb,OAGXK,EAHW,OAIfV,EAASU,EAAKC,SAJC,gDAMjBP,EAAS,KAAMQ,SANE,yBAQjBV,GAAW,GARM,4EAAH,sDAWhBM,EAAaH,EAChB,GAAC,CAACA,IAEH,IAAMQ,EAAWd,EAAMe,KAAI,gBAAET,EAAF,EAAEA,GAAIU,EAAN,EAAMA,QAASC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,WAAvB,OAAqC,2BAAa,oCAAYD,MAAW,kCAAUC,MAAe,uBAAIF,MAAxDV,EAA9C,IAE3B,OAAQ,gCAAGJ,IAAW,oDACtB,wBAAKF,EAAMmB,OAAS,EAAIL,GAAU,+DACjCV,IAAS,uBAAIA,MACf,C,mMC9BKgB,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAAwBC,EAAxB,+BAA+B,EAA/B,SACkBP,EAASQ,IAAI,uBAAwB,CAAED,KAAAA,IADzD,uBACGhB,EADH,EACGA,KADH,kBAEEA,GAFF,mEAKA,SAAekB,EAAtB,kC,aAAO,O,oBAAA,WAA2BvB,GAA3B,yFACkBc,EAASQ,IAAT,iBAAuBtB,IADzC,uBACGK,EADH,EACGA,KADH,kBAEEA,GAFF,kEAUPU,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMS,EAAM,mCAGL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACWX,EAAAA,EAAAA,IAAA,gCAEaS,EAFb,kBAE0BE,EAF1B,gCAHL,IAORC,MAAK,SAAAC,GAAG,OAAIA,EAAIvB,IAAR,IALN,cACCwB,EADD,yBAMEA,EAAEvB,SANJ,kEASA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,yFACkBc,EAASQ,IAAT,iBAAuBtB,EAAvB,aADlB,uBACGK,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAAuB9B,GAAvB,yFACkBc,EAASQ,IAAT,iBAAuBtB,EAAvB,aADlB,uBACGK,EADH,EACGA,KADH,kBAEEA,GAFF,kE","sources":["components/Modules/MovieDetails/Reviews/Reviews.jsx","service/api/getFilms.js"],"sourcesContent":["import { getReviews } from 'service/api/getFilms';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\n\nfunction Reviews() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const[error, setError] = useState(null);\n  const { id }  = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async id => {\n      setLoading(true);\n      try {\n        const data = await getReviews(id);\n          setItems(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n      fetchReviews(id);\n  },[id]);\n\n  const elements = items.map(({id, content, author, created_at})=><li key={id}><p>Author: {author}</p><p>Date: {created_at}</p><p>{content}</p></li>)\n\n  return (<>{loading && <p>please wait, loading...</p>}\n  <ul>{items.length > 0 ? elements: <p>There is no reviews on this movie</p>}</ul>\n  {error && <p>{error}</p>}</>);\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c23d7755b502540a74ef819e02a6a593',\n    language: 'en-US',\n  },\n});\n\nexport async function getFilms(page = 1) {\n  const { data } = await instance.get('/trending/movie/week', { page });\n  return data;\n}\n\nexport async function getFilmById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\n// export async function getFilmSearch(search) {\n//   const { data } = await instance.get(`/search/movie/?query=${search}`);\n//   return data;\n// }\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'c23d7755b502540a74ef819e02a6a593';\nconst page = 1;\n\nexport async function getFilmSearch(query) {\n  const r = await axios\n    .get(\n      `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=${page}`\n    )\n    .then(res => res.data);\n  return r.results;\n}\n\nexport async function getReviews(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n"],"names":["useState","items","setItems","loading","setLoading","error","setError","id","useParams","useEffect","fetchReviews","getReviews","data","results","message","elements","map","content","author","created_at","length","instance","axios","baseURL","params","api_key","language","getFilms","page","get","getFilmById","KEY","getFilmSearch","query","then","res","r","getCast"],"sourceRoot":""}